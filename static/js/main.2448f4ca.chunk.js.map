{"version":3,"sources":["component/loader/index.tsx","store.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils/movie-redux.tsx"],"names":["Loader","className","style","animationDelay","configureStore","reducer","name","App","MoviesList","React","lazy","store","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","movieRedux","createSlice","initialState","movies","reducers","update","state","action","movieData","payload","map","data","img","searchUpdate","filter","toLowerCase","includes","reset","actions"],"mappings":"+GAAA,gBAceA,IAZf,WACI,OACI,qBAAKC,UAAU,qDAAf,SACI,sBAAKA,UAAU,0EAAf,UACA,qBAAKA,UAAU,mDAAmDC,MAAO,CAACC,eAAgB,UAC1F,qBAAKF,UAAU,mDAAmDC,MAAO,CAACC,eAAgB,UAC1F,qBAAKF,UAAU,mDAAmDC,MAAO,CAACC,eAAgB,iB,iKCLvFC,cAAe,CAC5BC,QAAQ,eACLC,IAAOD,O,eCcGE,MAbf,WACE,IAAMC,EAAaC,IAAMC,MAAK,kBAAM,sDACpC,OACE,mCACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,IAApB,SACE,cAACJ,EAAD,WCEKK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,K,uJCLaP,EAAO,YAMdqB,EAAaC,YAAY,CAC7BtB,OACAuB,aAZgD,CAChDC,OAAS,IAYTC,SAAU,CACRC,OAAQ,SAACC,EAAOC,GARD,IAACC,EASdF,EAAMH,OAAN,sBAAoBG,EAAMH,QAA1B,aATcK,EASiCD,EAAOE,SARvCD,EAAUE,KAAI,SAACC,GAAc,MAAO,CAAChC,KAAKgC,EAAKhC,KAAKiC,IAAID,EAAK,oBAAqB,MAUnGE,aAAc,SAACP,EAAOC,GACpBD,EAAMH,OAASG,EAAMH,OAAOW,QAAO,SAACH,GAAD,OAAuBA,EAAKhC,KAAKoC,cAAcC,SAAST,EAAOE,QAAQM,mBAE5GE,MAAO,SAACX,GACNA,EAAMH,OAAS,OAKNe,EAAqBlB,EAArBkB,QAASxC,EAAYsB,EAAZtB,U","file":"static/js/main.2448f4ca.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div className=\"flex justify-center items-center bg-black h-screen\">\r\n            <div className=\"bg-gray-600 flex space-x-2 p-5 rounded-full justify-center items-center\">\r\n            <div className=\"p-2 w-4 h-4 rounded-full bg-white animate-bounce\" style={{animationDelay: \"0.1s\"}}></div>\r\n            <div className=\"bg-white p-2 w-4 h-4 rounded-full animate-bounce\" style={{animationDelay: \"0.2s\"}}></div>\r\n            <div className=\"bg-white p-2 w-4 h-4 rounded-full animate-bounce\" style={{animationDelay: \"0.3s\"}}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { name, reducer } from './utils/movie-redux';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [name]: reducer,\r\n  },\r\n})","import React, { Suspense } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Loader from './component/loader';\n\nfunction App() {\n  const MoviesList = React.lazy(() => import('./component/movieList'));\n  return (\n    <>\n      <Provider store={store}>\n        <Suspense fallback={<Loader />}>\n          <MoviesList />\n        </Suspense>\n      </Provider>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { MovieDetails } from '../Interfaces/Movie';\r\n\r\n\r\nconst initialState : { movies :MovieDetails[]}  = {\r\n  movies : [],\r\n};\r\n\r\nexport const name = 'movieList';\r\n\r\nconst modifyData = (movieData:any) => {\r\n  return movieData ? movieData.map((data:any)=> { return {name:data.name,img:data[\"poster-image\"]}}) : [];\r\n}\r\n\r\nconst movieRedux = createSlice({\r\n  name,\r\n  initialState,\r\n  reducers: {\r\n    update: (state, action: PayloadAction<MovieDetails[]>) => {\r\n      state.movies =  [...state.movies,...modifyData(action.payload)];\r\n    },\r\n    searchUpdate: (state, action: PayloadAction<string>) => {\r\n      state.movies = state.movies.filter((data:MovieDetails) => data.name.toLowerCase().includes(action.payload.toLowerCase()));\r\n    },\r\n    reset: (state) => {\r\n      state.movies = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const { actions, reducer } = movieRedux;"],"sourceRoot":""}